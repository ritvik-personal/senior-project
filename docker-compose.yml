services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: campusfin-backend
    ports:
      - "8000:8000"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_PUBLIC_KEY=${SUPABASE_PUBLIC_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - ALLOWED_ORIGINS=http://localhost:3000,http://frontend:3000
    volumes:
      - ./backend:/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - campusfin-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: campusfin-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - campusfin-network

networks:
  campusfin-network:
    driver: bridge

volumes:
  backend_data:
